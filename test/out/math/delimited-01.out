--- parse tree ---
[ Code
    "test/typ/math/delimited-01.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060"
                             , Text "("
                             , Code
                                 "test/typ/math/delimited-01.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/math/delimited-01.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Comment
, Equation
    False
    [ MGroup
        (Just "[")
        Nothing
        [ Text "1"
        , Text ","
        , Text "2"
        , MGroup
            (Just "[")
            Nothing
            [ Text "="
            , MGroup
                (Just "[")
                Nothing
                [ Text "1"
                , Text ","
                , Text "2"
                , Text ")"
                , Code
                    "test/typ/math/delimited-01.typ"
                    ( line 3 , column 16 )
                    (FieldAccess (Ident (Identifier "not")) (Ident (Identifier "eq")))
                , Code
                    "test/typ/math/delimited-01.typ"
                    ( line 3 , column 19 )
                    (Ident (Identifier "zeta"))
                , Text "("
                , MFrac (Text "x") (Text "2")
                , Text ")"
                ]
            ]
        ]
    ]
, ParBreak
]
--- evaluated ---
{ text(body: [
]), 
  math.equation(block: false, 
                body: { text(body: [[]), 
                        text(body: [1]), 
                        text(body: [,]), 
                        text(body: [2]), 
                        text(body: [[]), 
                        text(body: [=]), 
                        text(body: [[]), 
                        text(body: [1]), 
                        text(body: [,]), 
                        text(body: [2]), 
                        text(body: [)]), 
                        text(body: [≠]), 
                        text(body: [ζ]), 
                        text(body: [(]), 
                        math.frac(denom: text(body: [2]), 
                                  num: text(body: [x])), 
                        text(body: [)]) }, 
                numbering: none), 
  parbreak() }
