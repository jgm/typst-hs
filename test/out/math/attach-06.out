--- parse tree ---
[ Code
    "test/typ/math/attach-06.typ"
    ( line 1 , column 2 )
    (Let
       (BasicBind (Just (Identifier "test")))
       (FuncExpr
          [ NormalParam (Identifier "x") , NormalParam (Identifier "y") ]
          (Block
             (CodeBlock
                [ If
                    [ ( Equals (Ident (Identifier "x")) (Ident (Identifier "y"))
                      , Block (Content [ Text "\9989" ])
                      )
                    , ( Literal (Boolean True)
                      , Block
                          (Content
                             [ Text "\10060"
                             , Text "("
                             , Code
                                 "test/typ/math/attach-06.typ"
                                 ( line 1 , column 47 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "x")) ])
                             , Space
                             , Text "/"
                             , Text "="
                             , Space
                             , Code
                                 "test/typ/math/attach-06.typ"
                                 ( line 1 , column 59 )
                                 (FuncCall
                                    (Ident (Identifier "repr"))
                                    [ NormalArg (Ident (Identifier "y")) ])
                             , Text ")"
                             ])
                      )
                    ]
                ]))))
, SoftBreak
, Comment
, Equation
    True
    [ MAttach
        Nothing
        (Just (Text "n"))
        (MGroup
           (Just "(")
           (Just ")")
           [ Code
               "test/typ/math/attach-06.typ"
               ( line 3 , column 4 )
               (Ident (Identifier "minus"))
           , Text "1"
           ])
    , Text "+"
    , MAttach
        Nothing
        (Just
           (MGroup
              Nothing
              Nothing
              [ Code
                  "test/typ/math/attach-06.typ"
                  ( line 3 , column 23 )
                  (Ident (Identifier "minus"))
              , MFrac (Text "1") (Text "2")
              ]))
        (MGroup
           (Just "(")
           (Just ")")
           [ MFrac (Text "1") (Text "2") , Text "+" , Text "3" ])
    ]
, ParBreak
]
--- evaluated ---
{ text(body: [
]), 
  math.equation(block: true, 
                body: { math.attach(b: none, 
                                    base: math.lr(body: ({ [(], 
                                                           text(body: [−]), 
                                                           text(body: [1]), 
                                                           [)] })), 
                                    t: text(body: [n])), 
                        text(body: [+]), 
                        math.attach(b: none, 
                                    base: math.lr(body: ({ [(], 
                                                           math.frac(denom: text(body: [2]), 
                                                                     num: text(body: [1])), 
                                                           text(body: [+]), 
                                                           text(body: [3]), 
                                                           [)] })), 
                                    t: { text(body: [−]), 
                                         math.frac(denom: text(body: [2]), 
                                                   num: text(body: [1])) }) }, 
                numbering: none), 
  parbreak() }
